OUTPUT_FORMAT("elf32-h8300")
OUTPUT_ARCH(h8300h)
ENTRY("_start")

MEMORY
{
  ramall(rwx) : o = 0xffbf20, l = 0x004000 /* 16 KB */
  softvec(rw) : o = 0xffbf20, l = 0x000040 /* top of RAM(ソフトウェア割込みベクタの領域) */
  ram(rwx)    : o = 0xffc020, l = 0x003f00
  userstack(rw)   : o = 0xfff400, l = 0x000000 /* ユーザスタック */
  bootstack(rw)   : o = 0xffff00, l = 0x000000 /* ブートスタック */
  intrstack(rw)   : o = 0xffff00, l = 0x000000 /* 割込みスタック */
}

SECTIONS
{
  .softvec : {
    _softvec = . ;
  } > softvec

  .text : {
    _text_start = . ; /* text セクションの先頭を指すシンボルを配置 */
    *(.text)
    _etext = . ; /* .text セクションの終端を指すシンボルを配置 */
  } > ram /* .text セクションは RAM に配置する */

  .rodata : {
    _rodata_start = . ;
    *(.strings)
    *(.rodata)
    *(.rodata.*)
    _erodata = . ;
  } > ram /* .rodata セクションは RAM に配置する */

  .data : {
    _data_start = . ;
    *(.data)
    _edata = . ;
  } > ram

  .bss : {
    _bss_start = . ;
    *(.bss)
    *(COMMON)
    _ebss = . ;
  } > ram

  . = ALIGN(4); /* 4バイトアラインメント */
  _end = . ; /* セクションの終端に _end シンボルを配置する */

  .userstack : {
    _userstack = .;
  } > userstack

  .bootstack : {
    _bootstack = .;
  } > bootstack

  .intrstack : {
    _intrstack = .;
  } > intrstack
}
